    <!-- <script>
            document.addEventListener('DOMContentLoaded', function () {
    const updateButton = document.getElementById('updateTableButton');
    const table = document.getElementById('soutenances-table');

    updateButton.addEventListener('click', function () {
        const rows = Array.from(table.querySelectorAll('tbody tr'));
        const dataToCheck = rows.map(row => {
            return {
                id: row.getAttribute('data-id'),
                date: row.querySelector('input[data-field="date"]').value,
                time: row.querySelector('input[data-field="time"]').value,
                salle: row.querySelector('input[data-field="salle"]').value,
                president: row.querySelector('input[data-field="president"]').value,
                rapporteur: row.querySelector('input[data-field="rapporteur"]').value,
                encadrantAcademique: row.querySelector('input[data-field="encadrantAcademique"]').value,
                encadrantProfessionnel: row.querySelector('input[data-field="encadrantProfessionnel"]').value
            };
        });

        // Send the data to the backend for validation
        fetch('/planification/validate-soutenances', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ soutenances: dataToCheck }),
        })
        .then(response => response.json())
        .then(data => {
            // Clear previous highlights
            rows.forEach(row => {
                row.querySelectorAll('input, select').forEach(input => {
                    input.classList.remove('is-invalid');
                });
            });

            // Highlight the problematic cells
            data.duplicates.forEach(duplicate => {
                const row = table.querySelector(`tr[data-id="${duplicate.id}"]`);
                if (row) {
                    duplicate.fields.forEach(field => {
                        const input = row.querySelector(`[data-field="${field}"]`);
                        if (input) {
                            input.classList.add('is-invalid');
                        }
                    });
                }
            });
        })
        .catch(error => console.error('Error:', error));
    });
});

           </script> -->

