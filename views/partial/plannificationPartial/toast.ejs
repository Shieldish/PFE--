<div id="successToast" class="toast bg-success text-white" role="alert" aria-live="assertive" aria-atomic="true" data-bs-delay="5000">
    <div class="toast-header">
      <strong class="me-auto">Succès</strong>
      <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
    </div>
    <div class="toast-body">
      <!-- Success message will go here -->
    </div>
  </div>
  
  <div id="warningToast" class="toast bg-warning text-dark" role="alert" aria-live="assertive" aria-atomic="true" data-bs-delay="5000">
    <div class="toast-header">
      <strong class="me-auto">Attention</strong>
      <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
    </div>
    <div class="toast-body">
      <!-- Warning message will go here -->
    </div>
  </div>
  
  <div id="errorToast" class="toast bg-danger text-white" role="alert" aria-live="assertive" aria-atomic="true">
    <div class="toast-header">
      <strong class="me-auto">Erreur</strong>
      <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
    </div>
    <div class="toast-body">
      <!-- Error message will go here -->
    </div>
  </div>
  
  <style>
    .toast {
      position: fixed;
      top: 10px;
      right: 10px;
      z-index: 1050;
    }
  </style>














<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="deleteModalLabel">Confirmer la suppression</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          Êtes-vous sûr de vouloir supprimer la soutenance ID : <span id="delete-soutenance-id"></span> ?
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
          <button type="button" class="btn btn-danger delete-confirm-btn">Supprimer</button>
        </div>
      </div>
    </div>
  </div>



  

            <!-- Confirmation Modal -->
<!-- <div class="modal fade" id="exportTableModal" tabindex="-1" aria-labelledby="exportTableModallLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="exportTableModalLabel">Expoter ou Telecharger un model de soutenance </h5>
          <span> error or success message will be show here :</span>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">

             
            <div class="form-check">
                <input class="form-check-input" type="radio" name="flexRadioDefault" id="flexRadioDefault1">
                <label class="form-check-label" for="flexRadioDefault1">
                format Excel  (.xlsx)
                </label>
              </div>


              <div class="form-check">
                <input class="form-check-input" type="radio" name="flexRadioDefault" id="flexRadioDefault1">
                <label class="form-check-label" for="flexRadioDefault1">
                    format Excel  (.csv)
                </label>
              </div>

              <div class="form-check">
                <input class="form-check-input" type="radio" name="flexRadioDefault" id="flexRadioDefault1">
                <label class="form-check-label" for="flexRadioDefault1">
                    format Excel  (.pdf)
                </label>
              </div>

    
        
             <div class="form-check">
                <input class="form-check-input" type="checkbox" value="" id="defaultCheck1">
                <label class="form-check-label" for="defaultCheck1">
                  Réorganiser l'ordre de l'ID
                </label>
             </div>
                    
             <button type="button" id="exportBtn" class=" d-flex end btn btn-success">procéder</button>

        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
         
        </div>
      </div>
    </div>
  </div>
  
  -->
  <style>
    .form-check-group {
        display: flex;
        flex-direction: row;
        gap: 20px;
    }
</style>

  
<div class="modal fade" id="exportTableModal" tabindex="-1" aria-labelledby="exportTableModallLabel" aria-hidden="true">
    <div class="modal-dialog ">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="exportModalLabel">Export Options :  <span id="errorMessage" class="text-danger"></span> </h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <form id="exportForm" class="needs-validation" novalidate>
              <div class="form-check-group">
                
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="exportFormat" id="exportXlsx" value="xlsx" required>
                    <label class="form-check-label" for="exportXlsx">
                      Format Excel (.xlsx)
                    </label>
                    <div class="invalid-feedback">
                      Vous devez sélectionner un format.
                    </div>
                </div>

                <div class="form-check">
                    <input class="form-check-input" type="radio" name="exportFormat" id="exportCsv" value="csv" required>
                    <label class="form-check-label" for="exportCsv">
                      Format Excel (.csv)
                    </label>
                    <div class="invalid-feedback">
                      Vous devez sélectionner un format.
                    </div>
                </div>

               
    
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="exportFormat" id="exportPdf" value="pdf" required>
                    <label class="form-check-label" for="exportPdf">
                      Format PDF (.pdf)
                    </label>
                    <div class="invalid-feedback">
                      Vous devez sélectionner un format.
                    </div>
                </div>
              </div>
    
              <div class="form-check mt-3">
                <input class="form-check-input" type="checkbox" id="reorganizeId" value="reorganize" checked>
                <label class="form-check-label" for="reorganizeId">
                  Réorganiser l'ordre de l'ID
                </label>
              </div>
    
              
            </form>

        
          <!--  <button type="submit" id="exportBtn" class="btn btn-success mt-3">Procéder</button>
           <div  id="loadingSpinner"  class="spinner-border d-none" role="status">
            <span class="visually-hidden">Loading...</span>
          </div>
           <a id="downloadLink" class="btn btn-primary d-none" href="#" download>Download</a>  -->

           <style>
            /* Add this to your CSS file */
.export-controls {
  display: flex;
  align-items: center; /* Vertically centers the items */
  justify-content: space-between; /* Distributes space between items */
}

#loadingSpinner {
  margin-left: 1rem; /* Adjust spacing between the spinner and button */
}

#downloadLink {
  margin-left: 1rem;
  margin-top: 1rem; /* Adjust spacing between the download link and spinner */
}

           </style>

           <div class="export-controls d-flex align-items-center justify-content-between">
            <button type="submit" id="exportBtn" class="btn btn-success mt-3">Procéder</button>
            <div id="loadingSpinner" class="spinner-border d-none" role="status">
              <span class="visually-hidden">Loading...</span>
            </div>
            <a id="downloadLink" class="btn btn-primary d-none" href="#" download>Download</a>
          </div>
          
          
      
             


          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>

         

          </div>
        </div>
      </div>
  </div>




            <!-- Add Soutenance Modal -->
            <div class="modal fade" id="addSoutenanceModal" tabindex="-1" aria-labelledby="addSoutenanceModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-lg">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="addSoutenanceModalLabel">Ajouter une nouvelle Soutenance</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <form id="addSoutenanceForm">
                                <div class="row">
                                    <div class="col-md-4 mb-2">
                                        <label for="date" class="form-label">Date</label>
                                        <input type="date" class="form-control" id="date" name="date" required>
                                    </div>
                                    <div class="col-md-4 mb-2">
                                        <label for="time" class="form-label">Heure</label>
                                        <input type="time" class="form-control" id="time" name="time" required>
                                    </div>
                                    <div class="col-md-4 mb-2">
                                        <label for="salle" class="form-label">Salle</label>
                                        <input type="text" class="form-control" id="salle" name="salle" placeholder="Numéro de salle" required>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-4 mb-2">
                                        <label for="groupe" class="form-label">Groupe</label>
                                        <input type="text" class="form-control" id="groupe" name="groupe" placeholder="Groupe" required>
                                    </div>
                                    <div class="col-md-4 mb-2">
                                        <label for="type" class="form-label">Type</label>
                                        <select class="form-control" id="type" name="type" required>
                                            <option value="">Choisir...</option>
                                            <option value="Monome">Monôme</option>
                                            <option value="Binome">Binôme</option>
                                            <option value="Trinome">Trinôme</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-4 mb-2">
                                        <label for="etudiant1" class="form-label">Étudiant 1</label>
                                        <input type="text" class="form-control" id="etudiant1" name="etudiant1" placeholder="Nom de l'étudiant" required>
                                    </div>
                                    <div class="col-md-4 mb-2">
                                        <label for="etudiant2" class="form-label">Étudiant 2</label>
                                        <input type="text" class="form-control" id="etudiant2" name="etudiant2" placeholder="Nom de l'étudiant">
                                    </div>
                                    <div class="col-md-4 mb-2">
                                        <label for="etudiant3" class="form-label">Étudiant 3</label>
                                        <input type="text" class="form-control" id="etudiant3" name="etudiant3" placeholder="Nom de l'étudiant">
                                    </div>
                                </div>
                    <div class="row">
                        <div class="col-md-12 mb-2">
                            <label for="sujet" class="form-label">Sujet</label>
                            <textarea rows="2" type="text" class="form-control" id="sujet" name="sujet" placeholder="Sujet de la soutenance" required></textarea>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-2">
                            <label for="president" class="form-label">Président</label>
                            <input type="text" class="form-control" id="president" name="president" placeholder="Nom du président" required>
                        </div>
                        <div class="col-md-6 mb-2">
                            <label for="rapporteur" class="form-label">Rapporteur</label>
                            <input type="text" class="form-control" id="rapporteur" name="rapporteur" placeholder="Nom du rapporteur" required>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-2">
                            <label for="encadrantAcademique" class="form-label">Encadrant Académique</label>
                            <input type="text" class="form-control" id="encadrantAcademique" name="encadrantAcademique" placeholder="Nom de l'encadrant académique" required>
                        </div>
                        <div class="col-md-6 mb-2">
                            <label for="encadrantProfessionnel" class="form-label">Encadrant Professionnel</label>
                            <input type="text" class="form-control" id="encadrantProfessionnel" name="encadrantProfessionnel" placeholder="Nom de l'encadrant professionnel" required>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12 mb-2">
                            <label for="entreprise" class="form-label">Entreprise</label>
                            <input type="text" class="form-control" id="entreprise" name="entreprise" placeholder="Nom de l'entreprise" required>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">fermer</button>
                <button type="button" class="btn btn-primary" id="submitSoutenance">enregistrer Soutenances</button>
            </div>
        </div>
    </div>
</div>
                            
<script>
    document.addEventListener('DOMContentLoaded', function() {
        var typeSelect = document.getElementById('type');
        var etudiant1 = document.getElementById('etudiant1');
        var etudiant2 = document.getElementById('etudiant2');
        var etudiant3 = document.getElementById('etudiant3');

        function updateFields() {
            var type = typeSelect.value;
            var tooltipMessage = "Vous devez d'abord choisir le type";

            if (type === 'Monome') {
                enableField(etudiant1);
                disableField(etudiant2, tooltipMessage);
                disableField(etudiant3, tooltipMessage);
            } else if (type === 'Binome') {
                enableField(etudiant1);
                enableField(etudiant2);
                disableField(etudiant3, tooltipMessage);
            } else if (type === 'Trinome') {
                enableField(etudiant1);
                enableField(etudiant2);
                enableField(etudiant3);
            } else {
                disableField(etudiant1, tooltipMessage);
                disableField(etudiant2, tooltipMessage);
                disableField(etudiant3, tooltipMessage);
            }
        }

        function enableField(field) {
            field.disabled = false;
            field.removeAttribute('data-bs-toggle');
            field.removeAttribute('title');
            field.classList.remove('disabled-tooltip');
        }

        function disableField(field, tooltipMessage) {
            field.disabled = true;
            field.setAttribute('data-bs-toggle', 'tooltip');
            field.setAttribute('title', tooltipMessage);
            field.classList.add('disabled-tooltip');
            new bootstrap.Tooltip(field); // Initialize Bootstrap tooltip
        }

        // Initial check when the modal is opened
        updateFields();

        // Update fields whenever the type changes
        typeSelect.addEventListener('change', updateFields);
    });
</script>

<!-- Optional: Add some CSS for visual feedback -->
<style>
    .disabled-tooltip {
        cursor: not-allowed;
    }
</style>

<style>
    body {
        font-family: 'Arial', sans-serif;
        background-color: #f0f0f0;
        transition: background-color 0.5s ease;
        margin: 0;
        padding: 0;
    

    }
    .modal-body .row {
        margin-bottom: 10px;
    }
    .modal-body label {
        font-weight: bold;
    }

    .custom-container {
        display: flex;
        height: 100vh;
    }

    .main-content {
        flex-grow: 1;
        display: flex;
        flex-direction: column;
        background-color: #ffffff;
        box-shadow: 0 0 10px rgba(0,0,0,0.1);
        animation: fadeIn 0.5s ease-out;
    }

    h1 {
        color: #333;
        font-weight: bold;
        font-size: 20px;
        text-align: center;
        margin: 20px 0;
        animation: slideDown 0.5s ease-out;
    }

    .table-container {
        flex-grow: 1;
        overflow: auto;
        position: relative;
    }

    table {
        width: 100%;
        border-collapse: collapse;
        animation: fadeIn 0.8s ease-out;
        font-weight: bold;
        background-color: #f3f2f2;
        table-layout: fixed;
    }
   
    thead {
        font-weight: bold;
        position: sticky;
        top: 0;
        z-index: 1;

    }

    th, td {
        padding: 12px;
        text-align: left;
        border-bottom: 1px solid #ddd;

        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }


th:nth-child(1), td:nth-child(1) { width: 75px; }  /* New Column */
th:nth-child(2), td:nth-child(2) { width: 50px; }  /* ID */
th:nth-child(3), td:nth-child(3) { width: 120px; } /* Date */
th:nth-child(4), td:nth-child(4) { width: 120px; } /* Time */
th:nth-child(5), td:nth-child(5) { width: 80px; }  /* Salle */
th:nth-child(6), td:nth-child(6) { width: 100px; } /* Groupe */
th:nth-child(7), td:nth-child(7) { width: 120px; } /* Type */
th:nth-child(8), td:nth-child(8),
th:nth-child(9), td:nth-child(9),
th:nth-child(10), td:nth-child(10) { width: 120px; } /* Etudiants */
th:nth-child(11), td:nth-child(11) { width: 300px; } /* Sujet */
th:nth-child(12), td:nth-child(12),
th:nth-child(13), td:nth-child(13) { width: 150px; } /* President, Rapporteur */
th:nth-child(14), td:nth-child(14),
th:nth-child(15), td:nth-child(15) { width: 180px; } /* Encadrants */
th:nth-child(16), td:nth-child(16) { width: 150px; } /* Entreprise */


    th {
        background-color: #f2f2f2;
        font-weight: bold;
        color: #333;
    }

    tbody tr:hover {
        background-color: #f5f5f5;
        transition: background-color 0.3s ease;
    }

    input[type="text"], input[type="date"], input[type="time"], select {
        width: 100%;
        padding: 8px;
        border: 1px solid #ddd;
        border-radius: 4px;
        box-sizing: border-box;
        transition: border-color 0.3s ease;
    }

    input[type="text"]:focus, input[type="date"]:focus, input[type="time"]:focus, select:focus {
        border-color: #4CAF50;
        outline: none;
    }

    @keyframes fadeIn {
        from { opacity: 0; }
        to { opacity: 1; }
    }

    @keyframes slideDown {
        from { transform: translateY(-20px); opacity: 0; }
        to { transform: translateY(0); opacity: 1; }
    }

    @keyframes pulse {
        0% { transform: scale(1); }
        50% { transform: scale(1.05); }
        100% { transform: scale(1); }
    }

    .update-success {
        animation: pulse 0.5s ease-out;
    }
    
    .conflict{
        background-color:rgb(255, 199, 191);
        color: rgb(0, 0, 0);
        padding: 2px;
        border-radius: 20px;
        border-width: 2px;
        border-color: rgb(255, 0, 0);
        margin: 5px;
        font-weight: bold;
        animation: pulse 0.5s ease-out;
    }

    /* Hide the language selector */
.language-selector {
display: none;
}

.is-invalid {
    border-color: red;
    border-width: 15px;
    box-shadow: 0 0 5px rgba(255, 0, 0, 0.5);
    animation: pulse 0.5s ease-out infinite;
}

@keyframes pulse {
    0% {
        transform: scale(1);
    }
    50% {
        transform: scale(1.05);
    }
    100% {
        transform: scale(1);
    }
}



</style>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>


  <script>
    // Bootstrap validation
    (function () {
      'use strict'
      var form = document.querySelector('#exportForm');
      var submitButton = document.querySelector('#exportBtn');
  
      submitButton.addEventListener('click', function (event) {
        if (!form.checkValidity()) {
          event.preventDefault();
          event.stopPropagation();
        } else {
          // If valid, submit the form manually
        /*   form.submit(); */






  const exportForm = document.getElementById('exportForm');
  const exportBtn = document.getElementById('exportBtn');
  const loadingSpinner = document.getElementById('loadingSpinner');
  const errorMessage = document.getElementById('errorMessage');
  const downloadLink = document.getElementById('downloadLink');

  exportBtn.addEventListener('click', handleExport);

  async function handleExport(e) {
    e.preventDefault();

    if (!exportForm.checkValidity()) {
      exportForm.classList.add('was-validated');
      return;
    }

    const formData = new FormData(exportForm);
    const exportFormat = formData.get('exportFormat');
   /*  const reorganizeId = formData.get('reorganizeId') === 'reorganize'; */

    const reorganizeId = document.querySelector('#reorganizeId').checked;

    console.log('formData',formData)
    console.log('exportFormat',exportFormat)
    console.log('reorganizeId',reorganizeId)

    loadingSpinner.classList.remove('d-none');
    errorMessage.textContent = '';
    downloadLink.classList.add('d-none');

    try {
      const response = await fetch('/planification/export', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ exportFormat, reorganizeId }),
      });

      if (!response.ok) {
        throw new Error('Export failed');
      }
        



      const blob = await response.blob();
      const url = window.URL.createObjectURL(blob);
      downloadLink.href = url;
      downloadLink.download = `soutenance_${getFormattedDateTime()}.${exportFormat}`;
      downloadLink.classList.remove('d-none');
    } catch (error) {
      errorMessage.textContent = error.message;
    } finally {
      loadingSpinner.classList.add('d-none');
    }
  }




        }
        form.classList.add('was-validated');
      });
    })();



    function  getFormattedDateTime() {
        const now = new Date();
        const day = String(now.getDate()).padStart(2, '0');
        const month = String(now.getMonth() + 1).padStart(2, '0'); // Months are zero-indexed
        const year = now.getFullYear();
        const hours = String(now.getHours()).padStart(2, '0');
        const minutes = String(now.getMinutes()).padStart(2, '0');
        const seconds = String(now.getSeconds()).padStart(2, '0');
    
        return `${day}-${month}-${year}_${hours}-${minutes}-${seconds}`;
    }
  </script>
  