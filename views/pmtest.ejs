<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gestion des Tables</title>
    <%- include('./common/head') %>




    <style>
        /* Ensure wrapper takes full height and footer sticks at the bottom */
html, body {
    height: 100%;
    margin: 0;
    display: flex;
    flex-direction: column;
}

.wrapper {
    flex: 1;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
}

.content {
    flex: 1;
}

/* Sidebar styles */
.sidebar-nav {
    background-color: #4A90E2;
    height: 100vh;
    width: 250px;
    min-width: 200px;
    top: 0;
    left: 0;
    overflow-x: hidden;
    transition: 0.5s;
    padding-top: 60px;
    z-index: 1;
}

/* Navbar styles */
.navbar {
    background-color: rgb(13, 10, 10);
    color: #fdf9f9;
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 100%;
}

/* Footer styles */
.footer {
    background-color: rgba(0, 0, 0, 0.05);
    padding: 20px;
    color: #000;
    text-align: center;
    position: relative;
    width: 100%;
    bottom: 0;

}

    </style>

    <style>


    /* Ensure the body takes the full height of the viewport */
    html, body {
        height: 100%;
        margin: 0;
    }
  
    /* Flexbox container */
    .wrapper {
        display: flex;
        flex-direction: column;
        min-height: 100vh;

        width: calc(100% - 260px); /* Adjust width to account for sidebar */
            margin-left: 250px; /* Align with the content */
            position: relative;
            bottom: 0;
    }
  
    /* Main content should take all available space */
    .content {
        flex: 1;
    }
  
    /* Footer styles */
    footer {
        background-color: #f8f9fa;
        text-align: center;
        padding: 20px;
    }



    
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
   
    font-size: 12px;
   
 
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;

}


body, html {
   /*  margin: 0;
    padding: 0;
    background-color:white;
   height: 100%;  */
   margin: 0;
   height: 100vh;
   display: flex;
   flex-direction: column;
}


body {
  
    background-color:white;
    /*   overflow-x: hidden;   */
    /*   overflow-y: hidden;   */
}


    .sidebar-nav .logo {
    padding: 20px;
    font-size: 24px;
    font-weight: bold;
    text-align: center;
  }

  .sidebar-nav .logo a {
    color: #ffffff;
    text-decoration: none;
  }

  .sidebar-nav ul#sidebarItems {
    list-style-type: none;
    padding: 0;
    margin: 0;
  }

  .sidebar-nav .sidebar-item {
    display: block;
    color: #fefefe;
    padding: 10px;
    text-decoration: none;
    transition: 0.3s;
  }

  .sidebar-nav .sidebar-item:hover {
    background-color: #ddd;
    color: #000;
  }

  .sidebar-nav .sidebar-item i {
    margin-right: 10px;
  }

  .sidebar-nav .sidebar-subitem {
    display: block;
    color: #ffffff;
    padding: 12px 16px 12px 36px;
    text-decoration: none;
    transition: 0.3s;
  }

  .sidebar-nav .sidebar-subitem:hover {
    background-color: #ccc;
    color: #000;
  }

  .sidebar-nav .submenu {
    list-style-type: none;
    padding: 0;
    margin: 0;
  }

  @media (max-width: 767.98px) {
      .sidebar-nav {
        width: 0;
        padding: 0;
      }

      .sidebar-nav.show {
        width: auto;
        transition: width 0.5s ease-in-out; /* Added transition */
      }
    }


    @keyframes fadeIn {
  0% {
    opacity: 0;
    transform: translateX(-20px);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

.sidebar-nav,
.sidebar-nav .sidebar-item,
.sidebar-nav .sidebar-subitem {
  animation: fadeIn 0.5s ease-in-out;
}

.sidebar-nav .sidebar-item[data-toggle="collapse"] {
  position: relative;
}

.sidebar-nav .sidebar-item[data-toggle="collapse"]:after {
  content: "\f107";
  font-family: "Font Awesome 5 Free";
  font-weight: 900;
  position: absolute;
  right: 16px;
  transition: transform 0.3s ease-in-out;
}

.sidebar-nav .sidebar-item[aria-expanded="true"]:after {
  transform: rotate(180deg);
}

.sidebar-nav .submenu {
  overflow: hidden;
  max-height: 0;
  transition: max-height 0.3s ease-in-out;
}

.sidebar-nav .submenu.show {
  max-height: 500px; 
}
</style>

    <style>
        

        .sidebar-nav {
    background-color: #4A90E2;
    height: 100vh;
    width: 250px; /* Set a fixed width or use min-width as needed */
    min-width: 200px;
    position: fixed;
    top: 0;
    left: 0;
    padding-top: 0;
    margin-top: 0;
    overflow-x: hidden;
    transition: 0.5s;

    z-index: 1;
}
        .main-content {
            margin-left: 250px; /* Same width as sidebar */

            transition: margin-left 0.5s;
        }

        .navbar {
            background-color: rgb(13, 10, 10);
            color: #fdf9f9;
            display: flex;
            align-items: center;
            justify-content: space-between;
            width: calc(100% - 260px); /* Adjust width to account for sidebar */
            margin-left: 250px; /* Align with the content */
            position: relative;
            top: 0;
            z-index: 1001; /* Ensure it's above the sidebar */
        }

        .custom-navbar-bg {
            background-color: rgb(32, 32, 32); /* Navbar background color */
        }

        .dropdown-menu-end {
            right: 0;
            left: auto;
        }

        .dropdown-menu.dropdown-menu-dark {
            background-color: #343a40; /* Dropdown background color */
        }

        .user-info, .user-name, .user-prenom, .user-email {
            color: #ffffff; /* Text color for user info */
        }

        .nav-item {
            margin: 5px;
        }

        /* Ensures the sidebar does not overlap with the navbar */
        .sidebar-nav {
            top: 60px; /* Adjust this if your navbar height changes */
        }
    </style>
</head>
<body>
    <main>
        <nav id="main-navbar" class="navbar navbar-expand-lg navbar-light bg-light">
            <div class="container-fluid">
                <button class="navbar-toggler" type="button" aria-controls="sidebarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <form class="input-group w-auto my-auto" action="/search" method="GET">
                    <input autocomplete="on" type="search" name="q" class="form-control rounded mr-sm-2" placeholder='Search (ctrl + "/" to focus)' style="min-width: 300px;" />
                    <button class="btn btn-outline-success rounded-lg bg-green-500 text-white px-4 py-2 hover:bg-green-600" type="submit">
                        <i class="fas fa-search"></i>
                    </button>
                </form>
                <!-- Right links -->
                <ul class="navbar-nav ms-auto d-flex flex-row">
                    <li class="nav-item">
                        <div class="language-selector">
                            <select id="language-select" class="form-control">
                                <option value="en">English</option>
                                <option value="fr">Français</option>
                                <option value="ar">العربية</option>
                            </select>
                        </div>
                    </li>
                    <li class="nav-item dropdown d-none d-md-block">
                        <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                            <img src="../public/images/user/2.png" alt="User Logo" class="rounded-full w-8 h-8" loading="lazy">
                        </a>
                        <ul class="dropdown-menu dropdown-menu-dark dropdown-menu-end">
                            <li><div class="dropdown-item user-info text-center">user-info</div></li>
                            <li><hr class="dropdown-divider"></li>
                            <li><div class="dropdown-item user-name"></div></li>
                            <li><div class="dropdown-item user-prenom"></div></li>
                            <li><div class="dropdown-item user-email"></div></li>
                            <li><hr class="dropdown-divider"></li>
                            <div>
                                <li><a class="dropdown-item" href="/settings"><i class="fa-thin fa-user-gear"></i> Edit Profiles</a></li>
                            </div>
                        </ul>
                    </li>
                    <li class="nav-item">
                        <button class="btn btn-outline-danger" id="logoutButton">
                            <i class="fas fa-sign-out-alt"></i> Logout
                        </button>
                    </li>
                </ul>
            </div>
        </nav>

        <div class="sidebar-nav collapse d-md-block" id="sidebarNav">
            <div class="logo">
                <a href="/">Gestion des Stages</a>
            </div>
            <ul id="sidebarItems">
              <!-- Sidebar items will be dynamically generated here -->
            </ul>
        </div>

        <div class="main-content">
            <!-- Your main content goes here -->

          <div>

            
Skip to main content
CSS-Tricks
Articles
Notes
Links
Guides
Almanac
Shuffle
Search
sticky tables
A table with both a sticky header and a sticky first column
Avatar of Chris Coyier
Chris Coyier on Feb 9, 2021
We’ve covered that individual <table> cells, <th> and <td> can be position: sticky. It’s pretty easy to make the header of a table stick to the top of the screen while scrolling through a bunch or rows (like this demo).

But stickiness isn’t just for the top of the screen, you can stick things in any scroll direction (horizontal is just as fun). In fact, we can have multiple sticky elements stuck in different directions inside the same element, and even single elements that are stuck in multiple directions.

Here’s a video example of a table that sticks both the header and first column:

Why would you do that? Specifically for tabular data where cross-referencing is the point. In this table (which represents, of course, the scoring baseball game where somehow 20 teams are all playing each other at once because that’s how baseball works), it “makes sense” that you wouldn’t want the team name or the inning number to scroll away, as you’d lose context of what you’re looking at.


Not all tables need to be bi-directionally cross-referenceable. A lot of tables can smash rows into blocks on small screens for a better small-screen experience.

The “trick” at play here is partially the position: sticky; usage, but moreso to me, how you have to handle overlapping elements. A table cell that is sticky needs to have a background, because otherwise we’ll see overlapping content. It also needs proper z-index handling so that when it sticks in place, it’ll be on top of what it is supposed to be on top of. This feels like the trickiest part:

Make sure the tbody>th cells are above regular table cells, so they stay on top during a horizontal scroll.
Make sure the thead>th cells are above those, for vertical scrolling.
Make sure the thead>th:first-child cell is the very highest, as it needs to be above the body cells and it’s sibling headers again for horizontal scrolling.
A bit of a dance, but it’s doable.

High five to Cameron Clark who emailed me demoed this and showed me how cool it is. And indeed, Cameron, it is cool. When I shared that around, Estelle Weyl showed me a demo she made several years ago. That feels about right, Estelle is always a couple of years ahead of me.

Comments
Jon
Permalink to comment# February 9, 2021
I have them both beat ;)



Heinz
Permalink to comment# February 10, 2021
These are cool solutions :-)

Here is my take on this:

http://hgsweb.de/sticky/index.html

Sources are located at:

https://github.com/napengam/sticky

Giorgos Sarigiannidis
Permalink to comment# February 10, 2021
I had a similar need some time ago, when I needed to build a product comparison table, and I realized that having the first column always visible can be problematic on small screens, where there isn’t enough space. Instead, I preferred adding the label as custom attribute and fetch it with CSS attr(). I did use horizontal stickiness too, though, for the intermediate sections.

Here’s the respective pen and a more detailed explanation.

Tim
Permalink to comment# February 11, 2021
Any solutions like this that include virtualization for massive tables?

Aleksandar Totic
Permalink to comment# February 12, 2021
All browsers will support th/thead sticky by the end of the year.

“you can’t position tr or thead” is not true in Firefox/Safari, and is a crbug.com/702927 in Chrome. Chrome’s table rewrite is almost done, and with it, sticky bug will be fixed.

Dean
Permalink to comment# February 15, 2021
Would it be possible to post the HTML as well as the CSS please?

Geoff Graham
Permalink to comment# February 15, 2021
Try clicking the “View Compiled” button on the CodePen demo. That will compile Pug into HTML for ya.

Wayne
Permalink to comment# February 15, 2021
Have you tried this out using any assistive tech (VoiceOver, JAWS, etc)? Historically, they don’t have a great time whenever you get CSS to do anything “elaborate” on a table and get confused.

It looks a great attempt otherwise however.

Adrian Roselli
Permalink to comment# February 15, 2021
Wayne, this works in JAWS, VO, and NVDA because the wrapper has an accessible name & appropriate role, and the table has no display properties overriding its semantics.

TalkBack on Android is not so good. I filed a bug in December because this technique can cause trouble: TalkBack does not recognize tables in parents with tabindex.

I have screen reader support notes in my post Under-Engineered Responsive Tables, explaining the attributes.

For positioning in Safari you may need to use -webkit-sticky and the <caption> may misbehave as well (be sure to test). I go into more detail and outline workarounds in Fixed Table Headers.

Dragan Eror
Permalink to comment# February 18, 2021
You could set also 2nd column sticky, just need to know its position from the left. In other words, you need to know the size of the 1st column.

I used custom CSS properties for “fixed” columns sizes. Then used JS to make “fixed” columns resizable by user.

Works like a charm! :)

Brett Jennings
Permalink to comment# March 17, 2022
Can you provide the css to do this?

Laszlo Kocsis
Permalink to comment# March 2, 2021
Clever solution! My only problem is if I want cell borders, I have basically two options: 1) use border-collapse: collapse or 2) use border-collapse: separate. In the first case, I can have 1px cell borders, but they will disappear when I scroll down the table. In the second case, the cell borders are always there, but they are at least 2px wide. Is there a way to solve this to have always visible, 1px cell borders around header cells?

Laszlo Kocsis
Permalink to comment# March 2, 2021
I could solve my problem using border-collapse: collapse and a bit of border trickery: https://jsfiddle.net/koldev/1kwg3arq/

Sanjan Patel
Permalink to comment# May 13, 2021


I have this table and unable to fix the header, could someone please help me to fix this issue.

Sanjan Patel
Permalink to comment# May 14, 2021
Got the issue -> the sticky not working – tbody – thead with below css .

any workaround ?

display: table;
table-layout: fixed;
width: 100%;

Peter Jenkins
Permalink to comment# July 13, 2021
I have been wasting a couple of hours trying to do the same with position:absolute for 2 fixed columns on the left and one fixed column on the right running into all kinds of troubles (cells not having the same height anymore), etc. And all it needs is to be sticky (+ some positioning) … THANKS!

heswell
Permalink to comment# October 9, 2021
The problem with all of these solutions is that the horizontal scrollbar is not correct. It spans the full width of the table, rather than the actual scrollable area. Still searching for a solution to this

Nag
Permalink to comment# December 1, 2022
Did you find any solution for horizontal scrollbar?

VJ
Permalink to comment# December 4, 2022
I am also in the same boat as you. Did you find any solution?

Brett Jennings
Permalink to comment# March 17, 2022
Is there a way to keep the top sticky, but also the left 2 columns (instead of just 1 column)?

Eduar Bastidas
Permalink to comment# March 24, 2022
Let me tell you that you, sir, have saved my life. Thank you for this

Jesus
Permalink to comment# September 27, 2022
Is it possible to make headers use “resize: horizontal” with the first column sticky?

Mehmet
Permalink to comment# October 17, 2022
Great implementation. Thanks.
The table selector is styled as border: none; and border: 1px solid black;. I think the second one is unnecessary and it overrides the first one. Beside, it causes a small flickering, when you scroll the table horizontally. Because the table has 1px border but the th‘s left value is 0px.

This comment thread is closed. If you have important information to share, please contact us.

Making Tables With Sticky Header and Footers Got a Bit Easier
It wasn't long ago when I looked at sticky headers and footers in HTML s in the blog post A table with both a sticky header and a sticky first column. In it, I never used position: sticky on any , , or element, because even though Safari and Firefox…

June 14, 2021

Position Sticky and Table Headers
You can't position: sticky; a . Nor a . But you can sticky a , which means you can make sticky headers inside a regular ol' . This is tricky stuff, because if you didn't know this weird quirk, it would be hard to blame you. It makes way more…

July 12, 2019
An Idea for a Simple Responsive Spreadsheet
How do you make a spreadsheet-like interface responsive without the use of any JavaScript? This is the question I've been asking myself all week as I've been working on a new project and trying to figure out how to make the simplest spreadsheet possible. I wanted to avoid using a…

November 28, 2017
CSS-Tricks is powered by DigitalOcean.

Keep up to date on web dev
with our hand-crafted newsletter

*Email Address:
Subscribe
DigitalOcean
About DO
Cloudways
Legal stuff
Get free credit!
CSS-Tricks
Write for us!
Advertise with us
Contact us
Social
RSS Feeds
CodePen
Mastodon
X

          </div>

        </div>



        <div class="wrapper">
            <!-- Main content area -->
            <div class="content">
                <!-- Your content here -->
            </div>
        
            <!-- Footer -->
            <footer class="footer text-center text-lg-start bg-body-tertiary text-muted">
                <!-- Section: Social media -->
                <section class="d-flex justify-content-center justify-content-lg-between p-4 border-bottom">
                    <!-- Left -->
                    <div class="me-5 d-none d-lg-block">
                        <span>Get connected with us on social networks:</span>
                    </div>
                    <!-- Right -->
                    <div>
                        <a href="#" class="me-4 text-reset">
                            <i class="fab fa-facebook-f"></i>
                        </a>
                        <a href="#" class="me-4 text-reset">
                            <i class="fab fa-twitter"></i>
                        </a>
                        <a href="#" class="me-4 text-reset">
                            <i class="fab fa-google"></i>
                        </a>
                        <a href="#" class="me-4 text-reset">
                            <i class="fab fa-instagram"></i>
                        </a>
                        <a href="#" class="me-4 text-reset">
                            <i class="fab fa-linkedin"></i>
                        </a>
                        <a href="#" class="me-4 text-reset">
                            <i class="fab fa-github"></i>
                        </a>
                    </div>
                </section>
                <!-- Section: Social media -->
        
                <!-- Section: Links  -->
                <section>
                    <div class="container text-center text-md-start mt-5">
                        <!-- Grid row -->
                        <div class="row mt-3">
                            <!-- Grid column -->
                            <div class="col-md-3 col-lg-4 col-xl-3 mx-auto mb-4">
                                <!-- Content -->
                                <h6 class="text-uppercase fw-bold mb-4">
                                    <i class="fas fa-gem me-3"></i>GESTION STAGES
                                </h6>
                                <p>
                                    Here you can use rows and columns to organize your footer content. Lorem ipsum
                                    dolor sit amet, consectetur adipisicing elit.
                                </p>
                            </div>
                            <!-- Grid column -->
        
                            <!-- Grid column -->
                            <div class="col-md-2 col-lg-2 col-xl-2 mx-auto mb-4">
                                <!-- Links -->
                                <h6 class="text-uppercase fw-bold mb-4">Programs</h6>
                                <p>
                                    <a href="#!" class="text-reset">Planning</a>
                                </p>
                                <p>
                                    <a href="#!" class="text-reset">Affectation/Encadrement</a>
                                </p>
                                <p>
                                    <a href="#!" class="text-reset">Stages</a>
                                </p>
                                <p>
                                    <a href="#!" class="text-reset">Soutenance</a>
                                </p>
                            </div>
                            <!-- Grid column -->
        
                            <!-- Grid column -->
                            <div class="col-md-3 col-lg-2 col-xl-2 mx-auto mb-4">
                                <!-- Links -->
                                <h6 class="text-uppercase fw-bold mb-4">Useful links</h6>
                                <p>
                                    <a href="#!" class="text-reset">Admin</a>
                                </p>
                                <p>
                                    <a href="#!" class="text-reset">Settings</a>
                                </p>
                                <p>
                                    <a href="#!" class="text-reset">Orders</a>
                                </p>
                                <p>
                                    <a href="#!" class="text-reset">Help</a>
                                </p>
                            </div>
                            <!-- Grid column -->
        
                            <!-- Grid column -->
                            <div class="col-md-4 col-lg-3 col-xl-3 mx-auto mb-md-0 mb-4">
                                <!-- Links -->
                                <h6 class="text-uppercase fw-bold mb-4">Contact</h6>
                                <p><i class="fas fa-home me-3"></i> Sfax, Rue Soukra km3 fss-sfax, Tunisie</p>
                                <p>
                                    <i class="fas fa-envelope me-3"></i>
                                    kossisamuel.gabiam@fss.u-sfax.tn
                                </p>
                                <p><i class="fas fa-phone me-3"></i> +216 11223344</p>
                                <p><i class="fas fa-print me-3"></i> +216 22334455</p>
                            </div>
                            <!-- Grid column -->
                        </div>
                        <!-- Grid row -->
                    </div>
                </section>
                <!-- Section: Links  -->
        
                <!-- Copyright -->
                <div class="text-center p-4" style="background-color: rgba(0, 0, 0, 0.05);">
                    <p>&copy; 2024 Gestion des Stages. All rights reserved.</p>
                </div>
                <!-- Copyright -->
            </footer>
            <!-- Footer -->
        </div>
        
    </main>     
       

    

        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
        <script>

            function buildSidebar(sidebarItemsData) {
                const sidebarItemsContainer = document.getElementById('sidebarItems');
                sidebarItemsContainer.innerHTML = ''; // Clear existing sidebar items
            
                sidebarItemsData.forEach(item => {
                  const listItem = document.createElement('li');
                  const link = document.createElement('a');
                  link.classList.add('sidebar-item');
                  link.href = item.link;
                  link.innerHTML = `<i class="${item.icon}"></i> ${item.name}`;
                  listItem.appendChild(link);
            
                  // If item has children, create submenu
                  if (item.children && item.children.length > 0) {
                    const submenu = document.createElement('ul');
                    submenu.classList.add('submenu', 'collapse');
                    submenu.setAttribute('id', `submenu-${item.id}`); // Unique ID for each submenu
                    item.children.forEach(child => {
                      const childItem = document.createElement('li');
                      const childLink = document.createElement('a');
                      childLink.classList.add('sidebar-subitem');
                      childLink.href = child.link;
                      childLink.innerHTML = `<i class="${child.icon}"></i> ${child.name}`;
                      childItem.appendChild(childLink);
                      submenu.appendChild(childItem);
                    });
                    listItem.appendChild(submenu);
            
                    // Add click event to toggle submenu
                    listItem.classList.add('has-submenu'); // Add class to indicate item has submenu
                  }
            
                  sidebarItemsContainer.appendChild(listItem);
                });
            
                // Add event listener to toggle submenu
                const sidebarItemsWithSubmenu = document.querySelectorAll('.has-submenu');
                sidebarItemsWithSubmenu.forEach(item => {
                  const link = item.querySelector('.sidebar-item');
                  link.addEventListener('click', function(event) {
                    event.preventDefault(); // Prevent default anchor tag behavior
                    const submenu = item.querySelector('.submenu');
                    submenu.classList.toggle('show');
                  });
                });
              }
            
              document.addEventListener('DOMContentLoaded', function() {
                const select = document.getElementById('language-select');
                const storedLanguage = localStorage.getItem('selectedLanguage');
                select.value = storedLanguage || 'en'; // Default to 'en' if no stored value
            
                function fetchSidebarItems(language) {
                  fetch('/sidebar', {
                    method: 'POST',
                    headers: {
                      'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ lang: language })
                  })
                  .then(response => {
                    if (!response.ok) {
                      throw new Error('Network response was not ok');
                    }
                    return response.json();
                  })
                  .then(data => {
                    localStorage.setItem('selectedLanguage', language);
                    localStorage.setItem('sidebarItems', JSON.stringify(data));
                    buildSidebar(data);  // Build sidebar with filtered items
                  })
                  .catch(error => {
                    console.error('Error fetching sidebar items:', error);
                  });
                }
            
                fetchSidebarItems(select.value);
            
                select.addEventListener('change', function() {
                  fetchSidebarItems(this.value);
                });
              });
              
                document.addEventListener('DOMContentLoaded', function() {
                var select = document.getElementById('language-select');
                var storedLanguage = localStorage.getItem('selectedLanguage');
                if (storedLanguage) {
                    select.value = storedLanguage;
                } else {
                    // If no language is stored, default to English
                    select.value = 'en';
                }
            
                // Function to fetch sidebar items
                function fetchSidebarItems(language) {
                    fetch('/sidebar', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ lang: language })
                    })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        }
                        return response.json();
                    })
                    .then(data => {
                        // Handle response data if needed
                       // console.log('Sidebar items from server:', data);
                        // Store selected language in local storage
                        localStorage.setItem('selectedLanguage', language);
                        localStorage.setItem('sidebarItems', JSON.stringify(data));
                        buildSidebar(data);  // Assuming you have a function to build the sidebar
                    })
                    .catch(error => {
                        console.error('Error fetching sidebar items:', error);
                    });
                }
            
                // Fetch sidebar items using the default language value
                fetchSidebarItems(select.value);
            
                // AJAX request when language is changed
                select.addEventListener('change', function() {
                    const selectedLanguage = this.value;
                    console.log(selectedLanguage);
                    fetchSidebarItems(selectedLanguage);
                });
            });
            
            </script>
            
            <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
            <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js"></script>
            <script>
              $(document).ready(function() {
                var sidebarNav = $('#sidebarNav');
                var toggler = $('.navbar-toggler');
            
                toggler.on('click', function() {
                  var isExpanded = sidebarNav.hasClass('show');
            
                  if (isExpanded) {
                    sidebarNav.removeClass('show');
                    toggler.attr('aria-expanded', 'false');
                  } else {
                    sidebarNav.addClass('show');
                    toggler.attr('aria-expanded', 'true');
                  }
                });
              });
            </script>

<script>
    fetch('/connection/profiles')
        .then(response => response.json())
        .then(data => {
            // Update the profile card with the received data
            updateProfileCard(data);
        })
        .catch(error => {
            console.error('Error:', error);
        });

    function updateProfileCard(userData) {
        const userNameElement = document.querySelector('.user-name');
        const userEmailElement = document.querySelector('.user-email');
        const userPrenomElement = document.querySelector('.user-prenom');

        // Update the user name
        userNameElement.textContent = `Name: ${userData.NOM}`;

        // Update the user prenom
        userPrenomElement.textContent = `Prenom: ${userData.PRENOM}`;

        // Update the user email
        userEmailElement.textContent = `Email: ${userData.EMAIL}`;
    }
</script>

<script>
    document.getElementById('logoutButton').addEventListener('click', function() {
        // Make an AJAX request to the backend logout endpoint
        var xhr = new XMLHttpRequest();
        xhr.open('GET', '/connection/logout', true);
        xhr.onreadystatechange = function() {
            if (xhr.readyState === 4) {
                if (xhr.status === 200) {
                    // Logout successful, redirect to login page
                    window.location.href = '/connection/login';
                } else {
                    // Handle error response if needed
                    console.error('Error logging out:', xhr.responseText);
                }
            }
        };
        xhr.send();
    });
</script>
            
   
</body>
</html>
