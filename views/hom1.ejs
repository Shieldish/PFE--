<head>
    <title>Job Listings</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">

   <%-include('./common/head') %>
   <!-- Your other CSS files -->
   <style>
/* public/styles.css */
body {
background-color: #F5F5F5;
}

.job-card {
transition: transform 0.3s ease-in-out;
}

.job-card:hover {
transform: translateY(-5px);
}

.favorite-btn {
position: absolute;
top: 10px;
right: 10px;
}

.domaine-title {
color: #4A90E2;
margin-bottom: 20px;
}

.carousel-control-prev,
.carousel-control-next {
width: 5%;
}

.carousel-control-prev-icon,
.carousel-control-next-icon {
background-color: rgba(0,0,0,0.5);
border-radius: 50%;
padding: 10px;
}

.carousel-item {
padding: 20px;
}
   </style>
</head>
</head>
<body>
<div class="custom-container">
   <%-include('./common/sidebar') %>
   <div class="main-content">
      <%-include('./common/navbar') %>
      <h1 style="margin: 15px; padding: 15px;">Page d'acceille</h1>

      <div class="container mt-4">
        <h1 class="mb-4">Job Listings</h1>
        
        <div class="mb-3">
            <input type="text" id="searchInput" class="form-control" placeholder="Search...">
        </div>

        <div class="accordion mb-4" id="filterAccordion">
            <div class="accordion-item">
                <h2 class="accordion-header" id="filterHeading">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#filterCollapse" aria-expanded="false" aria-controls="filterCollapse">
                        Sort by
                    </button>
                </h2>
                <div id="filterCollapse" class="accordion-collapse collapse" aria-labelledby="filterHeading" data-bs-parent="#filterAccordion">
                    <div class="accordion-body">
                        <button class="btn btn-outline-primary me-2" id="sortNewest">
                            <i class="fas fa-clock"></i> Newest
                        </button>
                        <button class="btn btn-outline-primary" id="sortOldest">
                            <i class="fas fa-calendar"></i> Oldest
                        </button>
                    </div>
                </div>
            </div>
        </div>

      <div id="jobListings">
        <% if (stages && stages.length > 0) { %>
            <% const groupedStages = stages.reduce((acc, stage) => {
                if (!acc[stage.Domaine]) {
                    acc[stage.Domaine] = [];
                }
                acc[stage.Domaine].push(stage);
                return acc;
            }, {}); %>
    
            <% Object.entries(groupedStages).forEach(([domaine, jobs], index) => { %>
                <% if (jobs.length > 0) { %>
                    <div class="domaine-container mb-4">
                        <h2 class="domaine-title"><%= domaine %></h2>
                        <div id="carousel<%= index %>" class="carousel carousel-dark slide">
                            <div class="carousel-indicators">
                                <% jobs.forEach((_, jobIndex) => { %>
                                    <button type="button" data-bs-target="#carousel<%= index %>" data-bs-slide-to="<%= jobIndex %>" 
                                        <%= jobIndex === 0 ? 'class="active" aria-current="true"' : '' %> 
                                        aria-label="Slide <%= jobIndex + 1 %>"></button>
                                <% }); %>
                            </div>
                            <div class="carousel-inner">
                                <% jobs.forEach((job, jobIndex) => { %>
                                    <div class="carousel-item <%= jobIndex === 0 ? 'active' : '' %>">
                                        <div class="card job-card">
                                            <div class="card-body">
                                                <button class="btn btn-outline-danger favorite-btn" data-job-id="<%= job.id %>">
                                                    <i class="far fa-heart"></i>
                                                </button>
                                                <h5 class="card-title"><%= job.Titre %></h5>
                                                <h6 class="card-subtitle mb-2 text-muted"><%= job.Libelle %></h6>
                                                <p class="card-text"><strong><%= job.Nom %></strong> - <%= job.Address %></p>
                                                <p class="card-text"><strong>Experience:</strong> <%= job.Experience %></p>
                                                <p class="card-text"><strong>Niveau:</strong> <%= job.Niveau %></p>
                                                <p class="card-text"><strong>Postes Vacants:</strong> <%= job.PostesVacants %></p>
                                                <p class="card-text"><strong>Date Debut:</strong> <%= new Date(job.DateDebut).toLocaleDateString() %></p>
                                                <p class="card-text"><strong>Date Fin:</strong> <%= new Date(job.DateFin).toLocaleDateString() %></p>
                                                <p class="card-text"><small class="text-muted">Publié le: <%= new Date(job.createdAt).toLocaleString('fr-FR', { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' }) %></small></p>
                                                <a href="#" class="btn btn-primary">Voir plus de détails</a>
                                            </div>
                                        </div>
                                    </div>
                                <% }); %>
                            </div>
                            <button class="carousel-control-prev" type="button" data-bs-target="#carousel<%= index %>" data-bs-slide="prev">
                                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Previous</span>
                            </button>
                            <button class="carousel-control-next" type="button" data-bs-target="#carousel<%= index %>" data-bs-slide="next">
                                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Next</span>
                            </button>
                        </div>
                    </div>
                <% } %>
            <% }); %>
        <% } else { %>
            <div class="alert alert-info" role="alert">
                Aucune offre d'emploi disponible.
            </div>
        <% } %>
    </div>
      
    
      <hr>
      <%-include('./common/footer') %>
   </div>
 
</div>

<!-- Scripts -->
<!--   <script src="../public/js/script.js"></script> -->
<!-- Include Bootstrap JS -->
<!-- jQuery first, then Popper.js, then Bootstrap JS -->
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.3/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<script>document.addEventListener('DOMContentLoaded', function() {
   var select = document.getElementById('language-select');
   var storedLanguage = localStorage.getItem('selectedLanguage');
   if (storedLanguage) {
       select.value = storedLanguage;
   } else {
       // If no language is stored, default to English
       select.value = 'en';
   }
   
   // Function to fetch sidebar items
   function fetchSidebarItems(language) {
       fetch('/sidebar', {
           method: 'POST',
           headers: {
               'Content-Type': 'application/json'
           },
           body: JSON.stringify({ lang: language })
       })
       .then(response => {
           if (!response.ok) {
               throw new Error('Network response was not ok');
           }
           return response.json();
       })
       .then(data => {
           // Handle response data if needed
           //console.log('Sidebar items from server:', data);
           // Store selected language in local storage
           localStorage.setItem('selectedLanguage', language);
           localStorage.setItem('sidebarItems', JSON.stringify(data));
           buildSidebar(data);  // Assuming you have a function to build the sidebar
       })
       .catch(error => {
           console.error('Error fetching sidebar items:', error);
       });
   }
   
   // Fetch sidebar items using the default language value
   fetchSidebarItems(select.value);
   
   // AJAX request when language is changed
   select.addEventListener('change', function() {
       const selectedLanguage = this.value;
       console.log(selectedLanguage);
       fetchSidebarItems(selectedLanguage);
   });
   });
</script>
  

  <script>
document.addEventListener('DOMContentLoaded', function() {
const searchInput = document.getElementById('searchInput');
const jobListings = document.getElementById('jobListings');
const sortNewestBtn = document.getElementById('sortNewest');
const sortOldestBtn = document.getElementById('sortOldest');
const favoriteButtons = document.querySelectorAll('.favorite-btn');

let domaineContainers = Array.from(document.querySelectorAll('.domaine-container'));

searchInput.addEventListener('input', function() {
    const searchTerm = this.value.toLowerCase();
    domaineContainers.forEach(container => {
        const domaine = container.querySelector('.domaine-title').textContent;
        const jobs = Array.from(container.querySelectorAll('.carousel-item'));
        
        let hasVisibleJobs = false;
        jobs.forEach(job => {
            const jobText = job.textContent.toLowerCase();
            const isVisible = jobText.includes(searchTerm) || domaine.toLowerCase().includes(searchTerm);
            job.style.display = isVisible ? '' : 'none';
            if (isVisible) hasVisibleJobs = true;
        });

        container.style.display = hasVisibleJobs ? '' : 'none';
    });
});

function sortJobs(newest = true) {
    domaineContainers.forEach(container => {
        const carousel = container.querySelector('.carousel-inner');
        const jobs = Array.from(carousel.querySelectorAll('.carousel-item'));
        jobs.sort((a, b) => {
            const dateA = new Date(a.querySelector('small.text-muted').textContent.split(': ')[1]);
            const dateB = new Date(b.querySelector('small.text-muted').textContent.split(': ')[1]);
            return newest ? dateB - dateA : dateA - dateB;
        });

        jobs.forEach((job, index) => {
            job.classList.remove('active');
            if (index === 0) job.classList.add('active');
            carousel.appendChild(job);
        });

        // Update carousel indicators
        const indicators = container.querySelectorAll('.carousel-indicators button');
        indicators.forEach((indicator, index) => {
            indicator.setAttribute('data-bs-slide-to', index);
            indicator.classList.remove('active');
            indicator.removeAttribute('aria-current');
            if (index === 0) {
                indicator.classList.add('active');
                indicator.setAttribute('aria-current', 'true');
            }
        });
    });
}

sortNewestBtn.addEventListener('click', () => sortJobs(true));
sortOldestBtn.addEventListener('click', () => sortJobs(false));

favoriteButtons.forEach(btn => {
    btn.addEventListener('click', function() {
        const jobId = this.getAttribute('data-job-id');
        const icon = this.querySelector('i');
        
        if (icon.classList.contains('far')) {
            icon.classList.remove('far');
            icon.classList.add('fas');
            // Here you would typically send a request to your server to save this as a favorite
        } else {
            icon.classList.remove('fas');
            icon.classList.add('far');
            // Here you would typically send a request to your server to remove this from favorites
        }
    });
});
});
  </script>

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

</body>