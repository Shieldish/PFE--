<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" />


<style>
 /*  .sidebar-nav {
    background-color:#4A90E2;
    height: 100vh;
    width: auto;
    min-width: 200px;
    position: relative;
    z-index: 1;
    top: 0;
    left: 0;
    overflow-x: hidden;
    transition: 0.5s; 
    padding-top: 60px;
  
  } */

  .sidebar-nav {
    background-color: #4A90E2;
    height: 100vh;
    width: 250px; /* Set a fixed width or use min-width as needed */
    min-width: 200px;
  
    top: 0;
    left: 0;
    overflow-x: hidden;
    transition: 0.5s;
    padding-top: 60px;
    z-index: 1;
}


  .sidebar-nav .logo {
    padding: 20px;
    font-size: 24px;
    font-weight: bold;
    text-align: center;
  }

  .sidebar-nav .logo a {
    color: #ffffff;
    text-decoration: none;
  }

  .sidebar-nav ul#sidebarItems {
    list-style-type: none;
    padding: 0;
    margin: 0;
  }

  .sidebar-nav .sidebar-item {
    display: block;
    color: #fefefe;
    padding: 10px;
    text-decoration: none;
    transition: 0.3s;
  }

  .sidebar-nav .sidebar-item:hover {
    background-color: #ddd;
    color: #000;
  }

  .sidebar-nav .sidebar-item i {
    margin-right: 10px;
  }

  .sidebar-nav .sidebar-subitem {
    display: block;
    color: #ffffff;
    padding: 12px 16px 12px 36px;
    text-decoration: none;
    transition: 0.3s;
  }

  .sidebar-nav .sidebar-subitem:hover {
    background-color: #ccc;
    color: #000;
  }

  .sidebar-nav .submenu {
    list-style-type: none;
    padding: 0;
    margin: 0;
  }

  @media (max-width: 767.98px) {
      .sidebar-nav {
        width: 0;
        padding: 0;
      }

      .sidebar-nav.show {
        width: auto;
        transition: width 0.5s ease-in-out; /* Added transition */
      }
    }


    @keyframes fadeIn {
  0% {
    opacity: 0;
    transform: translateX(-20px);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

.sidebar-nav,
.sidebar-nav .sidebar-item,
.sidebar-nav .sidebar-subitem {
  animation: fadeIn 0.5s ease-in-out;
}

.sidebar-nav .sidebar-item[data-toggle="collapse"] {
  position: relative;
}

.sidebar-nav .sidebar-item[data-toggle="collapse"]:after {
  content: "\f107";
  font-family: "Font Awesome 5 Free";
  font-weight: 900;
  position: absolute;
  right: 16px;
  transition: transform 0.3s ease-in-out;
}

.sidebar-nav .sidebar-item[aria-expanded="true"]:after {
  transform: rotate(180deg);
}

.sidebar-nav .submenu {
  overflow: hidden;
  max-height: 0;
  transition: max-height 0.3s ease-in-out;
}

.sidebar-nav .submenu.show {
  max-height: 500px; 
}
</style>

<div class="sidebar-nav collapse d-md-block" id="sidebarNav">
  <div class="logo">
    <a href="/">Gestion des Stages</a>
  </div>
  <ul id="sidebarItems">
    <!-- Sidebar items will be dynamically generated here -->
  </ul>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>


<script>

function buildSidebar(sidebarItemsData) {
    const sidebarItemsContainer = document.getElementById('sidebarItems');
    sidebarItemsContainer.innerHTML = ''; // Clear existing sidebar items

    sidebarItemsData.forEach(item => {
      const listItem = document.createElement('li');
      const link = document.createElement('a');
      link.classList.add('sidebar-item');
      link.href = item.link;
      link.innerHTML = `<i class="${item.icon}"></i> ${item.name}`;
      listItem.appendChild(link);

      // If item has children, create submenu
      if (item.children && item.children.length > 0) {
        const submenu = document.createElement('ul');
        submenu.classList.add('submenu', 'collapse');
        submenu.setAttribute('id', `submenu-${item.id}`); // Unique ID for each submenu
        item.children.forEach(child => {
          const childItem = document.createElement('li');
          const childLink = document.createElement('a');
          childLink.classList.add('sidebar-subitem');
          childLink.href = child.link;
          childLink.innerHTML = `<i class="${child.icon}"></i> ${child.name}`;
          childItem.appendChild(childLink);
          submenu.appendChild(childItem);
        });
        listItem.appendChild(submenu);

        // Add click event to toggle submenu
        listItem.classList.add('has-submenu'); // Add class to indicate item has submenu
      }

      sidebarItemsContainer.appendChild(listItem);
    });

    // Add event listener to toggle submenu
    const sidebarItemsWithSubmenu = document.querySelectorAll('.has-submenu');
    sidebarItemsWithSubmenu.forEach(item => {
      const link = item.querySelector('.sidebar-item');
      link.addEventListener('click', function(event) {
        event.preventDefault(); // Prevent default anchor tag behavior
        const submenu = item.querySelector('.submenu');
        submenu.classList.toggle('show');
      });
    });
  }

  document.addEventListener('DOMContentLoaded', function() {
    const select = document.getElementById('language-select');
    const storedLanguage = localStorage.getItem('selectedLanguage');
    select.value = storedLanguage || 'en'; // Default to 'en' if no stored value

    function fetchSidebarItems(language) {
      fetch('/sidebar', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ lang: language })
      })
      .then(response => {
        if (!response.ok) {
          throw new Error('Network response was not ok');
        }
        return response.json();
      })
      .then(data => {
        localStorage.setItem('selectedLanguage', language);
        localStorage.setItem('sidebarItems', JSON.stringify(data));
        buildSidebar(data);  // Build sidebar with filtered items
      })
      .catch(error => {
        console.error('Error fetching sidebar items:', error);
      });
    }

    fetchSidebarItems(select.value);

    select.addEventListener('change', function() {
      fetchSidebarItems(this.value);
    });
  });
  
    document.addEventListener('DOMContentLoaded', function() {
    var select = document.getElementById('language-select');
    var storedLanguage = localStorage.getItem('selectedLanguage');
    if (storedLanguage) {
        select.value = storedLanguage;
    } else {
        // If no language is stored, default to English
        select.value = 'en';
    }

    // Function to fetch sidebar items
    function fetchSidebarItems(language) {
        fetch('/sidebar', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ lang: language })
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            return response.json();
        })
        .then(data => {
            // Handle response data if needed
           // console.log('Sidebar items from server:', data);
            // Store selected language in local storage
            localStorage.setItem('selectedLanguage', language);
            localStorage.setItem('sidebarItems', JSON.stringify(data));
            buildSidebar(data);  // Assuming you have a function to build the sidebar
        })
        .catch(error => {
            console.error('Error fetching sidebar items:', error);
        });
    }

    // Fetch sidebar items using the default language value
    fetchSidebarItems(select.value);

    // AJAX request when language is changed
    select.addEventListener('change', function() {
        const selectedLanguage = this.value;
        console.log(selectedLanguage);
        fetchSidebarItems(selectedLanguage);
    });
});

</script>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js"></script>
<script>
  $(document).ready(function() {
    var sidebarNav = $('#sidebarNav');
    var toggler = $('.navbar-toggler');

    toggler.on('click', function() {
      var isExpanded = sidebarNav.hasClass('show');

      if (isExpanded) {
        sidebarNav.removeClass('show');
        toggler.attr('aria-expanded', 'false');
      } else {
        sidebarNav.addClass('show');
        toggler.attr('aria-expanded', 'true');
      }
    });
  });
</script>

